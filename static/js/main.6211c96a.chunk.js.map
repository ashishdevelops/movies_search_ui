{"version":3,"sources":["MovieResult.js","MovieCardsList.js","MovieCard.js","NominationList.js","App.js","reportWebVitals.js","index.js"],"names":["MovieResult","props","nominated","this","nominationList","length","i","imdbID","id","button","margin","colorScheme","variant","position","isDisabled","onClick","onItemClick","value","index","borderWidth","borderRadius","overflow","src","poster","fallbackSrc","width","height","objectFit","padding","size","title","color","fontWeight","letterSpacing","fontSize","textTransform","ml","year","React","Component","MovieCardsList","element","movies","map","item","Title","Year","type","Type","Poster","card_type","spacing","align","MovieCard","w","p","d","alignItems","px","mt","as","lineHeight","minHeight","Close","NominationList","arr","onNominate","App","state","search_term","loading","nominations","full","handleChange","bind","handleSubmit","handleNominate","handleRemoveNominate","bannerRef","createRef","console","log","setState","http","XMLHttpRequest","url","open","send","onreadystatechange","e","readyState","status","json","JSON","parse","responseText","movies_arr","Object","keys","forEach","key","push","event","preventDefault","moviesList","target","to_nominate","alert","splice","search_response","thickness","speed","emptyColor","marginTop","marginBottom","onSubmit","pointerEvents","children","Search2","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAgDeA,E,kDA1CX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,WAAY,EAFH,E,qDAM4B,IAAtCC,KAAKF,MAAMG,eAAgBC,SAC3BF,KAAKD,WAAY,GAErB,IAAI,IAAII,EAAI,EAAGA,EAAKH,KAAKF,MAAMG,eAAgBC,SAAUC,EAAE,CACvD,GAAGH,KAAKF,MAAMG,eAAeE,GAAGC,SAAWJ,KAAKF,MAAMO,GAAG,CACrDL,KAAKD,WAAY,EACjB,MAEAC,KAAKD,WAAY,EAGzB,IAAIO,EAAS,cAAC,IAAD,CAAQC,OAAO,MAAMC,YAAY,OAAOC,QAAQ,QAAQC,SAAS,WAAWC,WAAYX,KAAKD,UAAWa,QAASZ,KAAKF,MAAMe,YAAaC,MAAOd,KAAKF,MAAMiB,MAA3J,sBAEb,OACI,eAAC,IAAD,CAAMC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAAnD,UACI,cAAC,IAAD,CAAOC,IAAKnB,KAAKF,MAAMsB,OAAQC,YAAY,kCAAkCC,MAAM,QAAQC,OAAO,QAAQC,UAAU,UACpH,eAAC,IAAD,CAAKC,QAAQ,OAAb,UACI,cAAC,IAAD,CAASC,KAAK,KAAd,SAAoB1B,KAAKF,MAAM6B,QAC/B,eAAC,IAAD,CACIC,MAAM,WACNC,WAAW,WACXC,cAAc,OACdC,SAAS,KACTC,cAAc,YACdC,GAAG,MANP,sBAQcjC,KAAKF,MAAMoC,QAExB5B,Y,GApCK6B,IAAMC,W,SCuBjBC,E,uKArBF,IAAD,OACAC,EAAU,uCAQd,OANIA,EADoB,MAArBtC,KAAKF,MAAMyC,QAAiD,IAA9BvC,KAAKF,MAAMyC,OAAQrC,OACtC,4CAECF,KAAKF,MAAMyC,OAAQC,KAAI,SAACC,EAAM1B,GAAP,OAAiB,cAAC,EAAD,CAAyBV,GAAIoC,EAAKrC,OAAQuB,MAAOc,EAAKC,MAAOR,KAAMO,EAAKE,KAAMC,KAAMH,EAAKI,KAAMzB,OAAQqB,EAAKK,OAAQjC,YAAa,EAAKf,MAAMe,YAAaZ,eAAgB,EAAKH,MAAMG,eAAgBc,MAAOA,EAAOhB,UAAW,EAAKA,UAAWgD,UAAU,UAArOhC,MAMrE,cAAC,IAAD,CACIiC,QAAS,EACTC,MAAM,UAFV,SAGSX,Q,GAhBQH,IAAMC,W,kBC8DpBc,E,kDA5DX,WAAYpD,GAAO,IAAD,8BACd,cAAMA,IACDC,WAAY,EAFH,E,qDAwBd,OACA,eAAC,IAAD,CAAMoD,EAAE,QAAQnC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAA7D,UACI,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,IAAKnB,KAAKF,MAAMsB,OAAQC,YAAY,kCAAkCC,MAAM,QAAQC,OAAO,OAAOC,UAAU,UACnH,eAAC,IAAD,CAAK4B,EAAE,IAAP,UACI,eAAC,IAAD,CAAKC,EAAE,OAAOC,WAAW,WAAzB,UACI,cAAC,IAAD,CAAOrC,aAAa,OAAOsC,GAAG,IAAI/C,YAAY,OAA9C,SACKR,KAAKF,MAAM8C,OAEhB,eAAC,IAAD,CACIhB,MAAM,WACNC,WAAW,WACXC,cAAc,OACdC,SAAS,KACTC,cAAc,YACdC,GAAG,IANP,sBAQcjC,KAAKF,MAAMoC,WAI7B,cAAC,IAAD,CACAsB,GAAG,IACH3B,WAAW,WACX4B,GAAG,KACHC,WAAW,QAJX,SAMK1D,KAAKF,MAAM6B,cAIpB,cAAC,IAAD,CAAQgC,UAAU,OAAO1C,aAAc,EAAGK,MAAM,OAAOC,OAAO,GAAGf,YAAY,MAAMC,QAAQ,QAAQG,QAASZ,KAAKF,MAAMe,YAAaC,MAAOd,KAAKF,MAAMiB,MAAtJ,SAA6J,cAAC6C,EAAA,EAAD,a,GAzDjJzB,IAAMC,WCQfyB,E,uKAPF,IAAD,OAEAC,EAAM9D,KAAKF,MAAMyC,OAErB,OAAO,cAAC,IAAD,UAASuB,EAAItB,KAAI,SAACC,EAAM1B,GAAP,OAAiB,cAAC,EAAD,CAAuBY,MAAOc,EAAKC,MAAOR,KAAMO,EAAKE,KAAMC,KAAMH,EAAKI,KAAMzB,OAAQqB,EAAKK,OAAQiB,WAAY,EAAKjE,MAAMiE,WAAYhD,MAAOA,EAAOgC,UAAU,YAAYlC,YAAa,EAAKf,MAAMe,aAAhLE,Y,GALpCoB,IAAMC,W,0FC+IpB4B,E,kDAxHb,WAAYlE,GAAO,IAAD,8BAChB,cAAMA,IACDmE,MAAQ,CAAC1B,OAAQ,GAAI2B,YAAa,QAASC,SAAQ,EAAOC,YAAa,GAAIC,MAAM,GACtF,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,qBAAuB,EAAKA,qBAAqBH,KAA1B,gBAC5B,EAAKI,UAAYxC,IAAMyC,YAPP,E,yDAUL,IAAD,OACVC,QAAQC,IAAI,kBACZ9E,KAAK+E,SAAS,CAACZ,SAAS,IAAO,WAC7B,IAAMa,EAAO,IAAIC,eACXC,EAAG,qCAAiC,EAAKjB,MAAMC,YAA5C,qBACTc,EAAKG,KAAK,MAAOD,GACjBF,EAAKI,OAELJ,EAAKK,mBAAqB,SAACC,GAEzB,GADAT,QAAQC,IAAIE,EAAKO,WAAYP,EAAKQ,QACX,IAApBR,EAAKO,YAAoC,MAAhBP,EAAKQ,OAAe,CAE9C,IAAIC,EAAOC,KAAKC,MAAMX,EAAKY,cAAhB,OACPC,EAAa,GACN,MAARJ,GACDK,OAAOC,KAAKN,GAAMO,SAAQ,SAASC,GACZ,SAAlBR,EAAKQ,GAAKpD,MACXgD,EAAWK,KAAKT,EAAKQ,OAM3B,EAAKlB,SAAS,CACZxC,OAAQsD,EACR1B,SAAS,IAEXU,QAAQC,IAAI,4B,mCAMPqB,GACXA,EAAMC,iBACNpG,KAAKqG,e,mCAGMF,GACXnG,KAAK+E,SAAS,CAAEb,YAAaiC,EAAMG,OAAOxF,U,qCAG7BqF,GACb,IAAII,EAAcvG,KAAKiE,MAAM1B,OAAO4D,EAAMG,OAAOxF,OAE7Cd,KAAKiE,MAAMG,YAAalE,OAAS,GACnCF,KAAK+E,SAAS,CAAEX,YAAY,GAAD,mBAAMpE,KAAKiE,MAAMG,aAAjB,CAA8BmC,MACnB,GAAlCvG,KAAKiE,MAAMG,YAAalE,SAC1BF,KAAK+E,SAAS,CAACV,MAAK,IACpBmC,MAAM,UAGRxG,KAAK+E,SAAS,CAACV,MAAK,M,2CAIH8B,GAGnB,IAAIrC,EAAM9D,KAAKiE,MAAMG,YACrBN,EAAI2C,OAAON,EAAMG,OAAOxF,MAAM,GAC9Bd,KAAK+E,SAAS,CAAEX,YAAaN,IACzB9D,KAAKiE,MAAMG,YAAalE,OAAS,GACnCF,KAAK+E,SAAS,CAACV,MAAK,M,+BAOtB,GAAGrE,KAAKiE,MAAME,QACZ,IAAIuC,EAAkB,cAAC,IAAD,UAAQ,cAAC,IAAD,CAASC,UAAU,MAAMC,MAAM,QAAQC,WAAW,WAAWjF,MAAM,WAAWF,KAAK,cAE7GgF,EAAkB,cAAC,EAAD,CAAgB7F,YAAab,KAAKyE,eAAgBlC,OAAQvC,KAAKiE,MAAM1B,OAAQ4B,QAASnE,KAAKiE,MAAME,QAASlE,eAAgBD,KAAKiE,MAAMG,cAG7J,OACE,gCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKjB,EAAE,MAAMnC,YAAY,MAAMC,aAAa,KAAKQ,QAAQ,OAAOqF,UAAU,QAAQC,aAAe,OAAjG,SACE,sBAAMC,SAAUhH,KAAKwE,aAArB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAkByC,cAAc,OAAOC,SAAU,cAACC,EAAA,EAAD,CAAavF,MAAM,eACpE,cAAC,IAAD,CAAOgB,KAAK,QAAQvC,GAAG,eAAeS,MAAOd,KAAKiE,MAAMnD,MAAOsG,SAAUpH,KAAKsE,kBAEhF,cAAC,IAAD,uEAMR,eAAC,IAAD,CAAMnB,EAAE,SAAS5C,OAAO,OAAOgB,OAAO,OAAtC,UACE,cAAC,IAAD,UACA,eAAC,IAAD,CAAK4B,EAAE,QAAQnC,YAAY,MAAMC,aAAa,KAAKQ,QAAQ,OAA3D,UACE,cAAC,IAAD,CAASC,KAAK,KAAd,6BACA,cAAC,EAAD,CAAgBa,OAAQvC,KAAKiE,MAAMG,YAAavD,YAAab,KAAK0E,4BAGpE,cAAC,IAAD,IACA,eAAC,IAAD,CAAKvB,EAAE,QAAQnC,YAAY,MAAMC,aAAa,KAAKQ,QAAQ,OAA3D,UACE,cAAC,IAAD,CAASC,KAAK,KAAd,4BACCgF,e,GAlHKvE,IAAMC,WCbTiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6211c96a.chunk.js","sourcesContent":["import React from 'react'\nimport {Box, Heading, Text, Image, Flex, Button} from '@chakra-ui/react'\n\n\nclass MovieResult extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.nominated = false;\n    }\n\n    render(){\n        if((this.props.nominationList).length === 0){\n            this.nominated = false;\n        }\n        for(let i = 0; i < (this.props.nominationList).length; ++i){\n            if(this.props.nominationList[i].imdbID === this.props.id){\n                this.nominated = true;\n                break;\n            }else{\n                this.nominated = false;\n            }\n        }\n        var button = <Button margin='5px' colorScheme=\"teal\" variant=\"solid\" position='absolute' isDisabled={this.nominated} onClick={this.props.onItemClick} value={this.props.index}>Nominate</Button>\n\n        return(\n            <Flex borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n                <Image src={this.props.poster} fallbackSrc=\"https://via.placeholder.com/300\" width='250px' height='250px' objectFit='cover'/>\n                <Box padding='20px'>\n                    <Heading size=\"lg\">{this.props.title}</Heading>\n                    <Box\n                        color=\"gray.500\"\n                        fontWeight=\"semibold\"\n                        letterSpacing=\"wide\"\n                        fontSize=\"sm\"\n                        textTransform=\"uppercase\"\n                        ml=\"0.5\"\n                    >\n                        Release: {this.props.year}\n                    </Box>\n                    {button}\n                </Box>\n            </Flex>\n\n        )\n    }\n}\n\nexport default MovieResult;","import React from 'react'\nimport MovieResult from './MovieResult.js'\nimport {VStack, StackDivider} from \"@chakra-ui/react\"\n\nclass MovieCardsList extends React.Component{\n\n    render(){\n        var element = <h3>error</h3>\n        if(this.props.movies == null || (this.props.movies).length === 0){\n            element = <h3>No Results</h3>\n        }else{ \n            element = (this.props.movies).map((item, index) => <MovieResult key={index} id={item.imdbID} title={item.Title} year={item.Year} type={item.Type} poster={item.Poster} onItemClick={this.props.onItemClick} nominationList={this.props.nominationList} index={index} nominated={this.nominated} card_type=\"result\"/>)\n\n        }\n\n        return(\n            \n            <VStack \n                spacing={4}\n                align=\"stretch\">\n                    {element}\n            </VStack>\n        )\n        \n    }\n}\n\nexport default MovieCardsList;","import React from 'react'\nimport { Box, Image, Badge, Button, Flex } from \"@chakra-ui/react\"\nimport {CloseIcon} from \"@chakra-ui/icons\"\n\nclass MovieCard extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.nominated = false;\n    }\n\n    render(){\n        // if(this.props.card_type == 'result'){\n        //     if((this.props.nominationList).length === 0){\n        //         this.nominated = false;\n        //     }\n        //     for(let i = 0; i < (this.props.nominationList).length; ++i){\n        //         if(this.props.nominationList[i].imdbID === this.props.id){\n        //             this.nominated = true;\n        //             break;\n        //         }else{\n        //             this.nominated = false;\n        //         }\n        //     }\n        //     var button = <Button margin='5px' colorScheme=\"teal\" variant=\"solid\" position='absolute' isDisabled={this.nominated} onClick={this.props.onItemClick} value={this.props.index}>Nominate</Button>\n        // }else{\n            \n        // }\n        //var button = <Button margin='5px' colorScheme=\"red\" variant=\"solid\" position='absolute' onClick={this.props.onItemClick} value={this.props.index}>Remove</Button>\n        \n        return(\n        <Flex w=\"300px\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n            <Box>\n            <Image src={this.props.poster} fallbackSrc=\"https://via.placeholder.com/300\" width='250px' height='80px' objectFit='cover'/>\n            <Box p=\"6\">\n                <Box d=\"flex\" alignItems=\"baseline\">\n                    <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n                        {this.props.type}\n                    </Badge>\n                    <Box\n                        color=\"gray.500\"\n                        fontWeight=\"semibold\"\n                        letterSpacing=\"wide\"\n                        fontSize=\"xs\"\n                        textTransform=\"uppercase\"\n                        ml=\"2\"\n                    >\n                        Release: {this.props.year}\n                    </Box>\n                </Box>\n\n                <Box\n                mt=\"1\"\n                fontWeight=\"semibold\"\n                as=\"h4\"\n                lineHeight=\"tight\"\n                >\n                    {this.props.title}\n                </Box>\n            </Box>\n            </Box>\n            <Button minHeight='100%' borderRadius={0} width='50px' height='' colorScheme=\"red\" variant=\"solid\" onClick={this.props.onItemClick} value={this.props.index}><CloseIcon/></Button>\n        </Flex>\n        )\n    }\n}\nexport default MovieCard;","import React from 'react'\nimport MovieCard from './MovieCard'\nimport {VStack} from '@chakra-ui/react'\n\nclass NominationList extends React.Component{\n    render(){\n\n        var arr = this.props.movies;\n\n        return <VStack>{arr.map((item, index) => <MovieCard key={index} title={item.Title} year={item.Year} type={item.Type} poster={item.Poster} onNominate={this.props.onNominate} index={index} card_type=\"nominated\" onItemClick={this.props.onItemClick}/>)}</VStack>\n    }\n}\nexport default NominationList;","import React from 'react'\nimport './App.css';\nimport MovieCardsList from './MovieCardsList';\nimport NominationList from './NominationList'\nimport Sticky from 'react-stickynode'\n// import Banner from './Banner.js'\nimport {\n  Box,Center,Flex,Spacer,\n  Heading,\n  FormControl,FormHelperText,Input,\n  InputLeftElement,InputGroup,\n  Spinner\n} from \"@chakra-ui/react\"\n// import {\n//   Modal,\n//   ModalOverlay,\n//   ModalContent,\n//   ModalHeader,\n//   ModalFooter,\n//   Button,\n//   useDisclosure,\n// } from \"@chakra-ui/react\"\n\nimport {Search2Icon} from \"@chakra-ui/icons\"\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {movies: [], search_term: \"error\", loading:false, nominations: [], full: false};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNominate = this.handleNominate.bind(this);\n    this.handleRemoveNominate = this.handleRemoveNominate.bind(this);\n    this.bannerRef = React.createRef();\n  }\n\n  moviesList(){\n    console.log('MAKING REQUEST')\n    this.setState({loading: true}, ()=>{\n      const http = new XMLHttpRequest();\n      const url = `https://www.omdbapi.com/?s=${this.state.search_term}&apikey=e2878480&`\n      http.open(\"GET\", url)\n      http.send()\n\n      http.onreadystatechange = (e) => {\n        console.log(http.readyState, http.status)\n        if(http.readyState === 4 && http.status === 200){\n\n          var json = JSON.parse(http.responseText)['Search'];\n          var movies_arr = []\n          if(json != null){\n            Object.keys(json).forEach(function(key) {\n              if(json[key].Type == 'movie'){\n                movies_arr.push(json[key]);\n              }\n            });\n          }\n\n\n          this.setState({\n            movies: movies_arr,\n            loading: false\n          });\n          console.log(\"API CALL RECIEVED\")\n        }\n      }\n    });\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.moviesList();\n  }\n\n  handleChange(event){\n    this.setState({ search_term: event.target.value})\n  }\n\n  handleNominate(event){\n    let to_nominate = this.state.movies[event.target.value];\n    //event.target.disabled = true;\n    if((this.state.nominations).length < 5){\n      this.setState({ nominations: [...this.state.nominations, to_nominate] });\n      if((this.state.nominations).length == 4){\n        this.setState({full:true})\n        alert('full')\n      }\n    }else{\n      this.setState({full:true})\n    }\n  }\n\n  handleRemoveNominate(event){\n    //let denominate = this.state.nominations[event.target.value];\n    //event.target.disabled = true;\n    var arr = this.state.nominations;\n    arr.splice(event.target.value,1)\n    this.setState({ nominations: arr })\n    if((this.state.nominations).length < 5){\n      this.setState({full:false})\n    }\n    //console.log('denominate', event.target.value, this.state.nominations)\n  }\n\n  render(){\n\n    if(this.state.loading){\n      var search_response = <Center><Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"blue.500\" size=\"xl\"/></Center>;\n    }else{\n      var search_response = <MovieCardsList onItemClick={this.handleNominate} movies={this.state.movies} loading={this.state.loading} nominationList={this.state.nominations}/>  \n    }\n\n    return (\n      <div>\n        <Center>\n          <Box w=\"50%\" borderWidth=\"1px\" borderRadius=\"lg\" padding='10px' marginTop='100px' marginBottom = '70px'>\n            <form onSubmit={this.handleSubmit}>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement pointerEvents=\"none\" children={<Search2Icon color=\"gray.300\"/>} />\n                  <Input type='field' id='search_field' value={this.state.value} onChange={this.handleChange}/>\n                </InputGroup>\n                <FormHelperText>Search for and nominate your favorite movies :)</FormHelperText>\n              </FormControl>\n            </form>\n          </Box> \n        </Center>\n\n        <Flex w=\"1200px\" margin='auto' height='100%'>\n          <Sticky>\n          <Box w=\"350px\" borderWidth=\"1px\" borderRadius=\"lg\" padding='10px'>\n            <Heading size='sm'>Nomination List</Heading>\n            <NominationList movies={this.state.nominations} onItemClick={this.handleRemoveNominate}/>  \n          </Box>\n          </Sticky>\n          <Spacer/>\n          <Box w=\"800px\" borderWidth=\"1px\" borderRadius=\"lg\" padding='10px'>\n            <Heading size='sm'>Search Results</Heading>\n            {search_response} \n          </Box>\n        </Flex>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nimport MovieResult from \"./MovieResult.js\"\n//<MovieResult title=\"Guardians of the Galaxy Vol. 2\" desc=\"The Guardians struggle to keep together as a team while dealing with their personal family issues, notably Star-Lord's encounter with his father the ambitious celestial being Ego.\"/>\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App/>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}