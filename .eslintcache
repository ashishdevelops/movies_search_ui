[{"/Users/ashish/Projects/shopify_webdev/src/index.js":"1","/Users/ashish/Projects/shopify_webdev/src/App.js":"2","/Users/ashish/Projects/shopify_webdev/src/reportWebVitals.js":"3","/Users/ashish/Projects/shopify_webdev/src/MovieCardsList.js":"4","/Users/ashish/Projects/shopify_webdev/src/MovieCard.js":"5","/Users/ashish/Projects/shopify_webdev/src/NominationList.js":"6"},{"size":595,"mtime":1610940610256,"results":"7","hashOfConfig":"8"},{"size":4185,"mtime":1610940610251,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1610674304536,"results":"10","hashOfConfig":"8"},{"size":1086,"mtime":1610940610253,"results":"11","hashOfConfig":"8"},{"size":2290,"mtime":1610940610252,"results":"12","hashOfConfig":"8"},{"size":501,"mtime":1610940610255,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h6dhu6",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/ashish/Projects/shopify_webdev/src/index.js",[],"/Users/ashish/Projects/shopify_webdev/src/App.js",["29","30","31"],"import React from 'react'\nimport './App.css';\nimport MovieCardsList from './MovieCardsList';\nimport NominationList from './NominationList'\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  Input,\n  Center,\n  InputLeftElement,\n  InputGroup,\n  Spinner\n} from \"@chakra-ui/react\"\n\nimport {Search2Icon} from \"@chakra-ui/icons\"\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {movies: [], search_term: \"error\", loading:false, nominations: [], nominationFull: false};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNominate = this.handleNominate.bind(this);\n    this.handleRemoveNominate = this.handleRemoveNominate.bind(this);\n  }\n\n  moviesList(){\n    console.log('MAKING REQUEST')\n    this.setState({loading: true}, ()=>{\n      const http = new XMLHttpRequest();\n      const url = `https://www.omdbapi.com/?s=${this.state.search_term}&apikey=e2878480&`\n      http.open(\"GET\", url)\n      http.send()\n\n      http.onreadystatechange = (e) => {\n        console.log(http.readyState, http.status)\n        if(http.readyState === 4 && http.status === 200){\n\n          var json = JSON.parse(http.responseText)['Search'];\n          var movies_arr = []\n          if(json != null){\n            Object.keys(json).forEach(function(key) {\n              if(json[key].Type == 'movie'){\n                movies_arr.push(json[key]);\n              }\n            });\n          }\n\n\n          this.setState({\n            movies: movies_arr,\n            loading: false\n          });\n          console.log(\"API CALL RECIEVED\")\n        }\n      }\n    });\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.moviesList();\n  }\n\n  handleChange(event){\n    this.setState({ search_term: event.target.value})\n  }\n\n  handleNominate(event){\n    let to_nominate = this.state.movies[event.target.value];\n    //event.target.disabled = true;\n    if((this.state.nominations).length < 5){\n      this.setState({ nominations: [...this.state.nominations, to_nominate] })\n      this.setState({nominationFull : true})\n      //console.log((this.state.nominations).length)\n    }else{\n      alert(\"You have finished nominating :)\")\n    }\n  }\n\n  handleRemoveNominate(event){\n    //let denominate = this.state.nominations[event.target.value];\n    //event.target.disabled = true;\n    var arr = this.state.nominations;\n    arr.splice(event.target.value,1)\n    this.setState({ nominations: arr })\n    //console.log('denominate', event.target.value, this.state.nominations)\n  }\n\n  render(){\n\n    if(this.state.loading){\n      var search_response = <Center><Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"blue.500\" size=\"xl\"/></Center>;\n    }else{\n      var search_response = <MovieCardsList onItemClick={this.handleNominate} movies={this.state.movies} loading={this.state.loading} nominationList={this.state.nominations}/>  \n    }\n\n    return (\n      <div>\n        <Center>\n          <Box w=\"50%\" borderWidth=\"1px\" borderRadius=\"lg\" padding='10px' marginTop='100px' marginBottom = '70px'>\n            <form onSubmit={this.handleSubmit}>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement pointerEvents=\"none\" children={<Search2Icon color=\"gray.300\"/>} />\n                  <Input type='field' id='search_field' value={this.state.value} onChange={this.handleChange}/>\n                </InputGroup>\n                <FormHelperText>Search for and nominate your favorite movies :)</FormHelperText>\n              </FormControl>\n            </form>\n          </Box> \n        </Center>\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" padding='30px' marginLeft='100px' marginRight='100px' minH='150px'>\n          <FormLabel>Nomination List</FormLabel>\n          <NominationList movies={this.state.nominations} onItemClick={this.handleRemoveNominate}/>  \n        </Box>\n        <Box borderWidth=\"1px\" borderRadius=\"lg\" padding='30px' marginTop='40px' marginLeft='100px' marginRight='100px' minH='300px'>\n          <FormLabel>Search Results</FormLabel>\n          {search_response} \n        </Box>\n      </div>\n    )\n  }\n}\n\nexport default App;\n",["32","33"],"/Users/ashish/Projects/shopify_webdev/src/reportWebVitals.js",[],"/Users/ashish/Projects/shopify_webdev/src/MovieCardsList.js",["34"],"import React from 'react'\nimport MovieResult from './MovieResult.js'\nimport {VStack, StackDivider} from \"@chakra-ui/react\"\n\nclass MovieCardsList extends React.Component{\n\n    render(){\n        var element = <h3>error</h3>\n        if(this.props.movies == null || (this.props.movies).length === 0){\n            element = <h3>No Results</h3>\n        }else{ \n            element = (this.props.movies).map((item, index) => <MovieResult key={index} id={item.imdbID} title={item.Title} year={item.Year} type={item.Type} poster={item.Poster} onItemClick={this.props.onItemClick} nominationList={this.props.nominationList} index={index} nominated={this.nominated} card_type=\"result\"/>)\n\n        }\n\n        return(\n            \n            <VStack \n                spacing={4}\n                align=\"stretch\">\n                    {element}\n            </VStack>\n        )\n        \n    }\n}\n\nexport default MovieCardsList;","/Users/ashish/Projects/shopify_webdev/src/MovieCard.js",[],"/Users/ashish/Projects/shopify_webdev/src/NominationList.js",[],{"ruleId":"35","severity":1,"message":"36","line":54,"column":33,"nodeType":"37","messageId":"38","endLine":54,"endColumn":35},{"ruleId":"35","severity":1,"message":"36","line":85,"column":42,"nodeType":"37","messageId":"38","endLine":85,"endColumn":44},{"ruleId":"39","severity":1,"message":"40","line":111,"column":11,"nodeType":"41","messageId":"42","endLine":111,"endColumn":26},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":3,"column":17,"nodeType":"41","messageId":"49","endLine":3,"endColumn":29},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'search_response' is already defined.","Identifier","redeclared","no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'StackDivider' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation"]