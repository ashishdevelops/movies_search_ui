[{"/Users/ashish/Projects/shopify_webdev/src/index.js":"1","/Users/ashish/Projects/shopify_webdev/src/App.js":"2","/Users/ashish/Projects/shopify_webdev/src/reportWebVitals.js":"3","/Users/ashish/Projects/shopify_webdev/src/MovieCardsList.js":"4","/Users/ashish/Projects/shopify_webdev/src/MovieCard.js":"5","/Users/ashish/Projects/shopify_webdev/src/NominationList.js":"6","/Users/ashish/Projects/shopify_webdev/src/MovieResult.js":"7"},{"size":880,"mtime":1610911428986,"results":"8","hashOfConfig":"9"},{"size":4627,"mtime":1610936173852,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610674304536,"results":"11","hashOfConfig":"9"},{"size":910,"mtime":1610921719890,"results":"12","hashOfConfig":"9"},{"size":2602,"mtime":1610926526421,"results":"13","hashOfConfig":"9"},{"size":507,"mtime":1610921849932,"results":"14","hashOfConfig":"9"},{"size":1663,"mtime":1610912602399,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"wdn6qz",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"19"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},"/Users/ashish/Projects/shopify_webdev/src/index.js",["35"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nimport MovieResult from \"./MovieResult.js\"\n//<MovieResult title=\"Guardians of the Galaxy Vol. 2\" desc=\"The Guardians struggle to keep together as a team while dealing with their personal family issues, notably Star-Lord's encounter with his father the ambitious celestial being Ego.\"/>\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App/>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["36","37"],"/Users/ashish/Projects/shopify_webdev/src/App.js",["38","39","40"],"import React from 'react'\nimport './App.css';\nimport MovieCardsList from './MovieCardsList';\nimport NominationList from './NominationList'\nimport Sticky from 'react-stickynode'\n// import Banner from './Banner.js'\nimport {\n  Box,Center,Flex,Spacer,\n  Heading,\n  FormControl,FormHelperText,Input,\n  InputLeftElement,InputGroup,\n  Spinner\n} from \"@chakra-ui/react\"\n// import {\n//   Modal,\n//   ModalOverlay,\n//   ModalContent,\n//   ModalHeader,\n//   ModalFooter,\n//   Button,\n//   useDisclosure,\n// } from \"@chakra-ui/react\"\n\nimport {Search2Icon} from \"@chakra-ui/icons\"\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {movies: [], search_term: \"error\", loading:false, nominations: [], full: false};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleNominate = this.handleNominate.bind(this);\n    this.handleRemoveNominate = this.handleRemoveNominate.bind(this);\n    this.bannerRef = React.createRef();\n  }\n\n  moviesList(){\n    console.log('MAKING REQUEST')\n    this.setState({loading: true}, ()=>{\n      const http = new XMLHttpRequest();\n      const url = `https://www.omdbapi.com/?s=${this.state.search_term}&apikey=e2878480&`\n      http.open(\"GET\", url)\n      http.send()\n\n      http.onreadystatechange = (e) => {\n        console.log(http.readyState, http.status)\n        if(http.readyState === 4 && http.status === 200){\n\n          var json = JSON.parse(http.responseText)['Search'];\n          var movies_arr = []\n          if(json != null){\n            Object.keys(json).forEach(function(key) {\n              if(json[key].Type == 'movie'){\n                movies_arr.push(json[key]);\n              }\n            });\n          }\n\n\n          this.setState({\n            movies: movies_arr,\n            loading: false\n          });\n          console.log(\"API CALL RECIEVED\")\n        }\n      }\n    });\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    this.moviesList();\n  }\n\n  handleChange(event){\n    this.setState({ search_term: event.target.value})\n  }\n\n  handleNominate(event){\n    let to_nominate = this.state.movies[event.target.value];\n    //event.target.disabled = true;\n    if((this.state.nominations).length < 5){\n      this.setState({ nominations: [...this.state.nominations, to_nominate] });\n      if((this.state.nominations).length == 4){\n        this.setState({full:true})\n        alert('you have reached the maximum nominations')\n      }\n    }else{\n      this.setState({full:true})\n    }\n  }\n\n  handleRemoveNominate(event){\n    //let denominate = this.state.nominations[event.target.value];\n    //event.target.disabled = true;\n    var arr = this.state.nominations;\n    arr.splice(event.target.value,1)\n    this.setState({ nominations: arr })\n    if((this.state.nominations).length < 5){\n      this.setState({full:false})\n    }\n    //console.log('denominate', event.target.value, this.state.nominations)\n  }\n\n  render(){\n\n    if(this.state.loading){\n      var search_response = <Center><Spinner thickness=\"4px\" speed=\"0.65s\" emptyColor=\"gray.200\" color=\"blue.500\" size=\"xl\"/></Center>;\n    }else{\n      var search_response = <MovieCardsList onItemClick={this.handleNominate} movies={this.state.movies} loading={this.state.loading} nominationList={this.state.nominations}/>  \n    }\n\n    return (\n      <div>\n        <Center>\n          <Box w=\"50%\" borderWidth=\"1px\" borderRadius=\"lg\" padding='10px' marginTop='100px' marginBottom = '70px'>\n            <form onSubmit={this.handleSubmit}>\n              <FormControl>\n                <InputGroup>\n                  <InputLeftElement pointerEvents=\"none\" children={<Search2Icon color=\"gray.300\"/>} />\n                  <Input type='field' id='search_field' value={this.state.value} onChange={this.handleChange}/>\n                </InputGroup>\n                <FormHelperText>Search for and nominate your favorite movies :)</FormHelperText>\n              </FormControl>\n            </form>\n          </Box> \n        </Center>\n\n        <Flex w=\"1200px\" margin='auto' height='100%'>\n          <Sticky>\n          <Box w=\"350px\" borderWidth=\"1px\" borderRadius=\"lg\" padding='10px'>\n            <Heading size='sm'>Nomination List</Heading>\n            <NominationList movies={this.state.nominations} onItemClick={this.handleRemoveNominate}/>  \n          </Box>\n          </Sticky>\n          <Spacer/>\n          <Box w=\"800px\" borderWidth=\"1px\" borderRadius=\"lg\" padding='10px'>\n            <Heading size='sm'>Search Results</Heading>\n            {search_response} \n          </Box>\n        </Flex>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","/Users/ashish/Projects/shopify_webdev/src/reportWebVitals.js",[],"/Users/ashish/Projects/shopify_webdev/src/MovieCardsList.js",["41"],"import React from 'react'\nimport MovieResult from './MovieResult.js'\nimport {VStack, StackDivider} from \"@chakra-ui/react\"\n\nclass MovieCardsList extends React.Component{\n\n    render(){\n        var element = <h3>error</h3>\n        if(this.props.movies == null || (this.props.movies).length === 0){\n            element = <h3>No Results</h3>\n        }else{ \n            element = (this.props.movies).map((item, index) => <MovieResult key={index} id={item.imdbID} title={item.Title} year={item.Year} type={item.Type} poster={item.Poster} onItemClick={this.props.onItemClick} nominationList={this.props.nominationList} index={index} nominated={this.nominated} card_type=\"result\"/>)\n\n        }\n\n        return(\n            \n            <VStack \n                spacing={4}\n                align=\"stretch\">\n                    {element}\n            </VStack>\n        )\n        \n    }\n}\n\nexport default MovieCardsList;","/Users/ashish/Projects/shopify_webdev/src/MovieCard.js",[],"/Users/ashish/Projects/shopify_webdev/src/NominationList.js",[],"/Users/ashish/Projects/shopify_webdev/src/MovieResult.js",["42"],"import React from 'react'\nimport {Box, Heading, Text, Image, Flex, Button} from '@chakra-ui/react'\n\n\nclass MovieResult extends React.Component{\n\n    constructor(props){\n        super(props)\n        this.nominated = false;\n    }\n\n    render(){\n        if((this.props.nominationList).length === 0){\n            this.nominated = false;\n        }\n        for(let i = 0; i < (this.props.nominationList).length; ++i){\n            if(this.props.nominationList[i].imdbID === this.props.id){\n                this.nominated = true;\n                break;\n            }else{\n                this.nominated = false;\n            }\n        }\n        var button = <Button margin='5px' colorScheme=\"teal\" variant=\"solid\" position='absolute' isDisabled={this.nominated} onClick={this.props.onItemClick} value={this.props.index}>Nominate</Button>\n\n        return(\n            <Flex borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n                <Image src={this.props.poster} fallbackSrc=\"https://via.placeholder.com/300\" width='250px' height='250px' objectFit='cover'/>\n                <Box padding='20px'>\n                    <Heading size=\"lg\">{this.props.title}</Heading>\n                    <Box\n                        color=\"gray.500\"\n                        fontWeight=\"semibold\"\n                        letterSpacing=\"wide\"\n                        fontSize=\"sm\"\n                        textTransform=\"uppercase\"\n                        ml=\"0.5\"\n                    >\n                        Release: {this.props.year}\n                    </Box>\n                    {button}\n                </Box>\n            </Flex>\n\n        )\n    }\n}\n\nexport default MovieResult;",{"ruleId":"43","severity":1,"message":"44","line":8,"column":8,"nodeType":"45","messageId":"46","endLine":8,"endColumn":19},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":54,"column":33,"nodeType":"53","messageId":"54","endLine":54,"endColumn":35},{"ruleId":"51","severity":1,"message":"52","line":85,"column":42,"nodeType":"53","messageId":"54","endLine":85,"endColumn":44},{"ruleId":"55","severity":1,"message":"56","line":111,"column":11,"nodeType":"45","messageId":"57","endLine":111,"endColumn":26},{"ruleId":"43","severity":1,"message":"58","line":3,"column":17,"nodeType":"45","messageId":"46","endLine":3,"endColumn":29},{"ruleId":"43","severity":1,"message":"59","line":2,"column":23,"nodeType":"45","messageId":"46","endLine":2,"endColumn":27},"no-unused-vars","'MovieResult' is defined but never used.","Identifier","unusedVar","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'search_response' is already defined.","redeclared","'StackDivider' is defined but never used.","'Text' is defined but never used.","no-global-assign","no-unsafe-negation"]